<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>MavenTest</groupId>
	<artifactId>exam</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>tan.maven.springmvc Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<springversion>3.1.1.RELEASE</springversion>
		<junitversion>3.8.1</junitversion>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junitversion}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${springversion}</version>
			<scope>compile</scope>
		</dependency>
		
		<!-- hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.6.3.Final</version>
			<scope>compile</scope>
		</dependency>
		
		<!-- 实体类用到了jpa的注解 -->
		<dependency>
		  <groupId>org.hibernate.javax.persistence</groupId>
		  <artifactId>hibernate-jpa-2.0-api</artifactId>
		  <version>1.0.0.Final</version>
		  <scope>compile</scope>
		</dependency>
		
		<!-- 语言转换工,Hibernate利用它实现 HQL 到 SQL的转换  -->
		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
		  	<version>2.7.6</version>
		</dependency>
		
		<!-- cglib与asm -->
		<!-- Hibernate用它来实现PO字节码的动态生成 -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
           	<version>3.1</version>
		</dependency>
		
		<!-- c3p0是一个数据库连接池，Hibernate可以配置为使用c3p0连接池 -->
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5-pre10</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>3.6.3.Final</version>
		</dependency>

		<!-- 二级缓存工具ehcache .在没有提供其他缓存工具时,这个缓存工具是必不可少的 -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.9.0</version>
		</dependency>
		
		<!-- ASM 字节转换库 -->
		<dependency>
           <groupId>org.ow2.asm</groupId>
           <artifactId>asm</artifactId>
           <version>4.2</version>
       </dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
		</dependency>

		<!-- Apache Commons 包中的一个，包含了一些Apache开发的集合类，功能比java.utils.*功能强大 -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- Apache Commons 包中的一个，包含了日志功，
		必须使用的jar。这个包本身包含一个Simple Logger，但是功能很弱。用来与log4j。
		但是在这里强烈建议使用log4j，因为log4j性能很高。 -->
		<!--如果你的工程是用maven管理的话，可以在commons-logging的依赖里把servlet-api-2.3去除掉，再加入你所需要的版本的servlet-api依赖。大概的例子如下：  -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- 指定scope为provided可以避免在发布的时候把servlet-api包拷到lib目录下。 -->
		<dependency>
		    <groupId>org.apache.tomcat</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>6.0.16</version>
		    <scope>provided</scope>
		</dependency>
		

		<!-- Apache Commons 包中的一个，包含了一些数据类型工具类，是java.lang.*的扩展 -->
		<dependency>
		  <groupId>commons-lang</groupId>
		  <artifactId>commons-lang</artifactId>
		  <version>2.5</version>
		</dependency>
		
		<!-- Apache Commons 包中的一个，包含了一些bean工具类 -->
		<dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.1</version>
        </dependency>
		
		<!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.5</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
		  <groupId>log4j</groupId>
		  <artifactId>log4j</artifactId>
		  <version>1.2.17</version>
		</dependency>
        
		<!-- dom4j是一个java的 XML API，类似于jdom，用来读写xml文件，这是必须的jar，Hibernate用它来读写配置文件 -->
		<dependency>
		  <groupId>dom4j</groupId>
		  <artifactId>dom4j</artifactId>
		  <version>1.6.1</version>
		</dependency>
		
		<!-- JDBC驱动 -->
		<dependency>
		  <groupId>com.oracle</groupId>
		  <artifactId>ojdbc14</artifactId>
		  <version>10.2.0.4.0</version>
		</dependency>
		
	</dependencies>

	<build>
	<finalName>exam</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
			</plugin>
			<!-- <plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/exam</path>
					<port>8080</port>
					<uriEncoding>UTF-8</uriEncoding>
					<url>http://localhost:8080/manager/text</url>
					<server>tomcat</server>
					<warFile>${basedir}/target/exam.war</warFile>
					<update>true</update>
				</configuration>
			</plugin> -->
			<plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>tomcat-maven-plugin</artifactId>
		        <version>1.1</version>
		        <!-- <configuration>
		            <path>/exam</path>
		            <port>8080</port>
		            <uriEncoding>UTF-8</uriEncoding>
		            <url>http://localhost:8080/manager/html</url>
		            <server>tomcat</server>
		            <warFile>${basedir}/target/exam.war</warFile>
		            <update>true</update>
		        </configuration> -->
		    </plugin>
		</plugins>
	</build>
</project>
